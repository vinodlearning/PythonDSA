//package com.ben.model.module;
//
//import com.ben.model.module.common.BCCTCharBotAppModule;
//import com.ben.model.view.AwardsFinalPartsViewImpl;
//import com.ben.model.view.awardcontactsRVOImpl;
//
//import java.math.BigDecimal;
//
//import java.sql.PreparedStatement;
//import java.sql.ResultSet;
//import java.sql.ResultSetMetaData;
//import java.sql.SQLException;
//
//import java.text.SimpleDateFormat;
//
//import java.util.ArrayList;
//import java.util.Date;
//import java.util.HashMap;
//import java.util.List;
//import java.util.Map;
//
//import oracle.jbo.server.ApplicationModuleImpl;
//import oracle.jbo.server.ViewObjectImpl;
//// ---------------------------------------------------------------------
//// ---    File generated by Oracle ADF Business Components Design Time.
//// ---    Fri Jul 11 12:19:54 IST 2025
//// ---    Custom code may be added to this class.
//// ---    Warning: Do not modify method signatures of generated methods.
//// ---------------------------------------------------------------------
//public class BCCTCharBotAppModuleImpl extends ApplicationModuleImpl implements BCCTCharBotAppModule {
//    /**
//     * This is the default constructor (do not remove).
//     */
//    public BCCTCharBotAppModuleImpl() {
//    }
//
// 
//    public Map<String, Object> executeDynamicQuery(String sqlQuery, String[] paramValues, String[] paramTypes) {
//        Map<String, Object> result = new HashMap<>();
//        PreparedStatement stmt = null;
//        ResultSet resultset = null;
//        
//        try {
//            stmt = getDBTransaction().createPreparedStatement(sqlQuery, 0);
//            
//            // Set parameters based on types
//            if (paramValues != null && paramTypes != null) {
//                for (int i = 0; i < paramValues.length && i < paramTypes.length; i++) {
//                    setParameterByType(stmt, i + 1, paramValues[i], paramTypes[i]);
//                }
//            }
//            
//            resultset = stmt.executeQuery();
//            
//            // Convert ResultSet to List of Maps
//            List<Map<String, Object>> rows = new ArrayList<>();
//            ResultSetMetaData metaData = resultset.getMetaData();
//            int columnCount = metaData.getColumnCount();
//            
//            while (resultset.next()) {
//                Map<String, Object> row = new HashMap<>();
//                for (int i = 1; i <= columnCount; i++) {
//                    String columnName = metaData.getColumnName(i);
//                    Object value = resultset.getObject(i);
//                    row.put(columnName, value);
//                }
//                rows.add(row);
//            }
//            
//            result.put("success", true);
//            result.put("rows", rows);
//            result.put("rowCount", rows.size());
//            result.put("columnCount", columnCount);
//            
//            // Add column metadata
//            List<String> columnNames = new ArrayList<>();
//            List<String> columnTypes = new ArrayList<>();
//            for (int i = 1; i <= columnCount; i++) {
//                columnNames.add(metaData.getColumnName(i));
//                columnTypes.add(metaData.getColumnTypeName(i));
//            }
//            result.put("columnNames", columnNames);
//            result.put("columnTypes", columnTypes);
//            
//        } catch (SQLException ex) {
//            result.put("success", false);
//            result.put("error", ex.getMessage());
//            result.put("rows", new ArrayList<>());
//            result.put("rowCount", 0);
//        } finally {
//            try {
//                if (resultset != null) resultset.close();
//                if (stmt != null) stmt.close();
//            } catch (SQLException e) {
//                // Log error
//            }
//        }
//        
//        return result;
//    }
//    private void setParameterByType(PreparedStatement stmt, int index, String value, String type) throws SQLException {
//        if (value == null || "null".equalsIgnoreCase(value)) {
//            stmt.setNull(index, java.sql.Types.VARCHAR);
//            return;
//        }
//        
//        switch (type.toUpperCase()) {
//            case "NUMBER":
//                try {
//                    stmt.setBigDecimal(index, new BigDecimal(value));
//                } catch (NumberFormatException e) {
//                    stmt.setString(index, value);
//                }
//                break;
//            case "DATE":
//                try {
//                    // Assuming date format is yyyy-MM-dd or similar
//                    stmt.setDate(index, java.sql.Date.valueOf(value));
//                } catch (Exception e) {
//                    stmt.setString(index, value);
//                }
//                break;
//            default: // STRING
//                stmt.setString(index, value);
//        }
//    }
//    public Map<String, Object> buildDynamicSQL(String actionType, String filterAttributes, 
//                                             String filterValues, String filterOperations, String displayColumns) {
//       
//       System.out.println();
//        Map<String, Object> result = new HashMap<>();
//        
//        try {
//            StringBuilder sql = new StringBuilder();
//            
//            // SELECT clause
//            sql.append("SELECT ");
//            if (displayColumns != null && !displayColumns.trim().isEmpty()) {
//                sql.append(displayColumns);
//            } else {
//                sql.append("*");
//            }
//            
//            // FROM clause based on action type
//            sql.append(" FROM ");
//            String tableName = getTableNameByActionType(actionType);
//            sql.append(tableName);
//            
//            // WHERE clause
//            String[] attributes = filterAttributes != null ? filterAttributes.split(",") : null;
//            String[] values = filterValues != null ? filterValues.split(",") : null;
//            String[] operations = filterOperations != null ? filterOperations.split(",") : null;
//            
//            if (attributes != null && attributes.length > 0) {
//                sql.append(" WHERE ");
//                for (int i = 0; i < attributes.length; i++) {
//                    if (i > 0) sql.append(" AND ");
//                    String operation = (operations != null && i < operations.length) ? operations[i] : "=";
//                    sql.append(attributes[i].trim()).append(" ").append(operation).append(" ?");
//                }
//            }
//            
//            result.put("success", true);
//            result.put("sqlQuery", sql.toString());
//            result.put("tableName", tableName);
//            result.put("parameterCount", attributes != null ? attributes.length : 0);
//            
//        } catch (Exception e) {
//            result.put("success", false);
//            result.put("error", e.getMessage());
//            result.put("sqlQuery", "");
//        }
//        
//        return result;
//    }
//    private String getTableNameByActionType(String actionType) {
//        switch (actionType) {
//            case "contracts_by_contractnumber":
//            case "contracts_by_filter":
//            case "create_contract":
//            case "update_contract":
//                return "XXCCT.CCT_CONTRACTS";
//            case "parts_by_contract_number":
//            case "parts_by_part_number":
//            case "parts_by_filter":
//                return "XXCCT.CCT_AWARDS_FINAL_PARTS";
//            case "parts_failed_by_contract_number":
//                return "XXCCT.CCT_AWARD_LOAD_ERRORS";
//            default:
//            return "XXCCT.CCT_CONTRACTS";
//        }
//    }
//    public Map<String, Object> executeNLPQuery(String actionType, String filterAttributes,
//                                           String filterValues, String filterOperations, String displayColumns) {
//        Map<String, Object> result = new HashMap<>();
//        PreparedStatement stmt = null;
//        ResultSet resultset = null;
//        
//        try {
//            // Build SQL using existing method
//            Map<String, Object> sqlResult = buildDynamicSQL(actionType, filterAttributes, filterValues, 
//                                                           filterOperations, displayColumns);
//            
//            if (!(Boolean) sqlResult.get("success")) {
//                result.put("success", false);
//                result.put("error", "SQL building failed: " + sqlResult.get("error"));
//                return result;
//            }
//            
//            String sqlQuery = (String) sqlResult.get("sqlQuery");
//            System.out.println("Generated SQL Query: " + sqlQuery);
//            
//            // Execute query
//            stmt = getDBTransaction().createPreparedStatement(sqlQuery, 0);
//            
//            // Set parameters
//            if (filterValues != null && !filterValues.trim().isEmpty()) {
//                String[] values = filterValues.split(",");
//                for (int i = 0; i < values.length; i++) {
//                    stmt.setString(i + 1, values[i].trim());
//                }
//            }
//            
//            resultset = stmt.executeQuery();
//            
//            // Convert ResultSet to List of Maps (raw data - no formatting)
//            List<Map<String, Object>> dataRows = new ArrayList<>();
//            
//            // Get column names
//            java.sql.ResultSetMetaData metaData = resultset.getMetaData();
//            int columnCount = metaData.getColumnCount();
//            List<String> columnNames = new ArrayList<>();
//            
//            for (int i = 1; i <= columnCount; i++) {
//                columnNames.add(metaData.getColumnName(i));
//            }
//            
//            // Get data rows
//            while (resultset.next()) {
//                Map<String, Object> row = new HashMap<>();
//                for (String columnName : columnNames) {
//                    Object value = resultset.getObject(columnName);
//                    row.put(columnName, value != null ? value.toString() : "N/A");
//                }
//                dataRows.add(row);
//            }
//            
//            result.put("success", true);
//            result.put("data", dataRows);
//            result.put("columnNames", columnNames);
//            result.put("rowCount", dataRows.size());
//            result.put("sqlQuery", sqlQuery);
//            
//        } catch (Exception ex) {
//            ex.printStackTrace();
//            result.put("success", false);
//            result.put("error", ex.getMessage());
//            result.put("data", new ArrayList<>());
//            result.put("columnNames", new ArrayList<>());
//            result.put("rowCount", 0);
//        } finally {
//            try {
//                if (resultset != null) resultset.close();
//                if (stmt != null) stmt.close();
//            } catch (Exception e) {
//                e.printStackTrace();
//            }
//        }
//        
//        return result;
//    }
//    public Map pullContractDatesByAwardNumber(String awardNumber) {
//        Map<String, Object> response = new HashMap<>();
//        Map<String, String> dates =new HashMap<>();
//        String query = "SELECT award_number, date_of_signature, effective_date, expiration_date, price_expiration_date, flow_down_date " +
//                       "FROM cct_award_date_management " +
//                       "WHERE award_number = ?";
//        
//        PreparedStatement stmt = null;
//        ResultSet resultset = null;
//        SimpleDateFormat dateFormat = new SimpleDateFormat("MM-dd-yy");
//        
//        try {
//            stmt = getDBTransaction().createPreparedStatement(query, 0);
//            stmt.setString(1, awardNumber);
//            resultset = stmt.executeQuery();
//            
//            if (resultset.next()) {
//                // Get each date column and format as MM-dd-yy
//                String  awardNumberDate = resultset.getString("award_number");
//                if (awardNumberDate != null) {
//                    dates.put("AWARD_NUMBER", awardNumberDate);
//                }
//                
//                Date dateOfSignature = resultset.getDate("date_of_signature");
//                if (dateOfSignature != null) {
//                    dates.put("DATE_OF_SIGNATURE", dateFormat.format(dateOfSignature));
//                }
//                
//                Date effectiveDate = resultset.getDate("effective_date");
//                if (effectiveDate != null) {
//                    dates.put("EFFECTIVE_DATE", dateFormat.format(effectiveDate));
//                }
//                
//                Date expirationDate = resultset.getDate("expiration_date");
//                if (expirationDate != null) {
//                    dates.put("EXPIRATION_DATE", dateFormat.format(expirationDate));
//                }
//                
//                Date priceExpirationDate = resultset.getDate("price_expiration_date");
//                if (priceExpirationDate != null) {
//                    dates.put("PRICE_EXPIRATION_DATE", dateFormat.format(priceExpirationDate));
//                }
//                
//                Date flowDownDate = resultset.getDate("flow_down_date");
//                if (flowDownDate != null) {
//                    dates.put("FLOW_DOWN_DATE", dateFormat.format(flowDownDate));
//                }
//            }
//        } catch (SQLException ex) {
//            ex.printStackTrace();
//        } finally {
//            try {
//                if (resultset != null) resultset.close();
//                if (stmt != null) stmt.close();
//            } catch (SQLException e) {
//                e.printStackTrace();
//                response.put("success", false);
//                response.put("error", "exception while pulling the data management data for the contarct #"+awardNumber);
//            }
//        }
//        response.put("success", true);
//        response.put("dates", dates);
//        return response;
//    }
//
//}
//
